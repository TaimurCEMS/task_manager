"""0001_initial_schema

Revision ID: 016f77c94aa0
Revises:
Create Date: 2025-08-13 11:03:31.552950
"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "016f77c94aa0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "workspace",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("owner_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "custom_field_definition",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("workspace_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("field_type", sa.String(length=50), nullable=False),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("workspace_id", "name", name="uq_workspace_field_name"),
    )
    op.create_index(
        op.f("ix_custom_field_definition_workspace_id"),
        "custom_field_definition",
        ["workspace_id"],
        unique=False,
    )
    op.create_table(
        "space",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("workspace_id", sa.String(), nullable=False),
        sa.Column("is_private", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_space_workspace_id"), "space", ["workspace_id"], unique=False
    )
    op.create_table(
        "tag",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("workspace_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("color", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tag_workspace_id"), "tag", ["workspace_id"], unique=False)
    op.create_table(
        "workspace_member",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("workspace_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("role", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_workspace_member_user_id"),
        "workspace_member",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workspace_member_workspace_id"),
        "workspace_member",
        ["workspace_id"],
        unique=False,
    )
    op.create_table(
        "folder",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("space_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["space_id"],
            ["space.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_folder_space_id"), "folder", ["space_id"], unique=False)
    op.create_table(
        "list",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("space_id", sa.String(), nullable=False),
        sa.Column("folder_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["folder_id"],
            ["folder.id"],
        ),
        sa.ForeignKeyConstraint(
            ["space_id"],
            ["space.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_list_folder_id"), "list", ["folder_id"], unique=False)
    op.create_index(op.f("ix_list_space_id"), "list", ["space_id"], unique=False)
    op.create_table(
        "list_custom_field",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("list_id", sa.String(), nullable=False),
        sa.Column("field_definition_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["field_definition_id"],
            ["custom_field_definition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["list_id"],
            ["list.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "list_id", "field_definition_id", name="uq_list_field_definition"
        ),
    )
    op.create_index(
        op.f("ix_list_custom_field_field_definition_id"),
        "list_custom_field",
        ["field_definition_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_list_custom_field_list_id"),
        "list_custom_field",
        ["list_id"],
        unique=False,
    )
    op.create_table(
        "task",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("list_id", sa.String(), nullable=False),
        sa.Column("parent_task_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("priority", sa.String(length=20), nullable=True),
        sa.Column("due_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["list_id"],
            ["list.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_task_list_id"), "task", ["list_id"], unique=False)
    op.create_index(
        op.f("ix_task_parent_task_id"), "task", ["parent_task_id"], unique=False
    )
    op.create_table(
        "comment",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_comment_task_id"), "comment", ["task_id"], unique=False)
    op.create_index(
        "ix_comment_task_id_created_at",
        "comment",
        ["task_id", "created_at"],
        unique=False,
    )
    op.create_index(op.f("ix_comment_user_id"), "comment", ["user_id"], unique=False)
    op.create_table(
        "custom_field_value",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("field_definition_id", sa.String(), nullable=False),
        sa.Column("value", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["field_definition_id"],
            ["custom_field_definition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "task_id", "field_definition_id", name="uq_task_field_value"
        ),
    )
    op.create_index(
        op.f("ix_custom_field_value_field_definition_id"),
        "custom_field_value",
        ["field_definition_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_custom_field_value_task_id"),
        "custom_field_value",
        ["task_id"],
        unique=False,
    )
    op.create_table(
        "task_assignee",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_task_assignee_task_id"), "task_assignee", ["task_id"], unique=False
    )
    op.create_index(
        op.f("ix_task_assignee_user_id"), "task_assignee", ["user_id"], unique=False
    )
    op.create_table(
        "task_tag",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("tag_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_task_tag_tag_id"), "task_tag", ["tag_id"], unique=False)
    op.create_index(op.f("ix_task_tag_task_id"), "task_tag", ["task_id"], unique=False)
    op.create_table(
        "task_watcher",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("task_id", "user_id", name="uq_task_watcher_task_user"),
    )
    op.create_index(
        op.f("ix_task_watcher_task_id"), "task_watcher", ["task_id"], unique=False
    )
    op.create_index(
        op.f("ix_task_watcher_user_id"), "task_watcher", ["user_id"], unique=False
    )
    op.create_table(
        "time_entry",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("minutes", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_time_entry_task_id"), "time_entry", ["task_id"], unique=False
    )
    op.create_index(
        op.f("ix_time_entry_user_id"), "time_entry", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_time_entry_user_id"), table_name="time_entry")
    op.drop_index(op.f("ix_time_entry_task_id"), table_name="time_entry")
    op.drop_table("time_entry")
    op.drop_index(op.f("ix_task_watcher_user_id"), table_name="task_watcher")
    op.drop_index(op.f("ix_task_watcher_task_id"), table_name="task_watcher")
    op.drop_table("task_watcher")
    op.drop_index(op.f("ix_task_tag_task_id"), table_name="task_tag")
    op.drop_index(op.f("ix_task_tag_tag_id"), table_name="task_tag")
    op.drop_table("task_tag")
    op.drop_index(op.f("ix_task_assignee_user_id"), table_name="task_assignee")
    op.drop_index(op.f("ix_task_assignee_task_id"), table_name="task_assignee")
    op.drop_table("task_assignee")
    op.drop_index(
        op.f("ix_custom_field_value_task_id"), table_name="custom_field_value"
    )
    op.drop_index(
        op.f("ix_custom_field_value_field_definition_id"),
        table_name="custom_field_value",
    )
    op.drop_table("custom_field_value")
    op.drop_index(op.f("ix_comment_user_id"), table_name="comment")
    op.drop_index("ix_comment_task_id_created_at", table_name="comment")
    op.drop_index(op.f("ix_comment_task_id"), table_name="comment")
    op.drop_table("comment")
    op.drop_index(op.f("ix_task_parent_task_id"), table_name="task")
    op.drop_index(op.f("ix_task_list_id"), table_name="task")
    op.drop_table("task")
    op.drop_index(op.f("ix_list_custom_field_list_id"), table_name="list_custom_field")
    op.drop_index(
        op.f("ix_list_custom_field_field_definition_id"), table_name="list_custom_field"
    )
    op.drop_table("list_custom_field")
    op.drop_index(op.f("ix_list_space_id"), table_name="list")
    op.drop_index(op.f("ix_list_folder_id"), table_name="list")
    op.drop_table("list")
    op.drop_index(op.f("ix_folder_space_id"), table_name="folder")
    op.drop_table("folder")
    op.drop_index(
        op.f("ix_workspace_member_workspace_id"), table_name="workspace_member"
    )
    op.drop_index(op.f("ix_workspace_member_user_id"), table_name="workspace_member")
    op.drop_table("workspace_member")
    op.drop_index(op.f("ix_tag_workspace_id"), table_name="tag")
    op.drop_table("tag")
    op.drop_index(op.f("ix_space_workspace_id"), table_name="space")
    op.drop_table("space")
    op.drop_index(
        op.f("ix_custom_field_definition_workspace_id"),
        table_name="custom_field_definition",
    )
    op.drop_table("custom_field_definition")
    op.drop_table("workspace")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
