name: Alembic Diff Check
on:
  push:
    branches: [ main, housekeeping-phase5 ]
  pull_request:
    branches: [ main ]

jobs:
  alembic-diff:
    # Safety: if a job ever did commit+push, skip runs from the bot
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    env:
      # Make "import app" work
      PYTHONPATH: ${{ github.workspace }}
      # Use local SQLite for CI
      DATABASE_URL: sqlite:///./test.db
      LOG_LEVEL: INFO
      LOG_JSON: "false"
      SECRET_KEY: dev
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      PIP_DISABLE_PIP_VERSION_CHECK: 1
      PYTHONDONTWRITEBYTECODE: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install -r requirements-dev.txt || true
          # Ensure alembic + DB drivers exist even if not pinned
          pip install alembic SQLAlchemy "psycopg2-binary" aiosqlite

      - name: Debug Python imports & env
        run: |
          python - <<'PY'
          import os, sys
          print("sys.path[0] =", sys.path[0])
          print("PYTHONPATH  =", os.environ.get("PYTHONPATH"))
          print("DATABASE_URL=", os.environ.get("DATABASE_URL"))
          import app
          print("✅ Imported 'app' OK")
          PY

      - name: Ensure versions dir exists
        run: mkdir -p alembic/versions

      - name: Upgrade DB
        run: alembic upgrade head

      - name: Count migrations before
        id: before
        run: echo "count_before=$(ls -1 alembic/versions | wc -l)" >> $GITHUB_OUTPUT

      - name: Autogenerate (dry check)
        run: alembic revision --autogenerate -m "ci-autogen-check" || true

      - name: Count migrations after
        id: after
        run: echo "count_after=$(ls -1 alembic/versions | wc -l)" >> $GITHUB_OUTPUT

      - name: Fail if drift detected
        if: ${{ steps.after.outputs.count_after != steps.before.outputs.count_before }}
        run: |
          echo "::error::Schema drift detected. Commit an Alembic migration."
          git ls-files --others --exclude-standard alembic/versions || true
          git --no-pager diff -- alembic/versions || true
          exit 1

      - name: Cleanup generated file (if any)
        if: ${{ steps.after.outputs.count_after != steps.before.outputs.count_before }}
        run: rm -f alembic/versions/*.py
